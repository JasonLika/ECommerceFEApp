@page "/orders"
@using ECommerceFEApp.AuthServices
@inject HttpClient Http
@inject AuthService AuthService
@using ECommerceFEApp.Models
@using ECommerceFEApp.Services
@inject OrderService OrderService
@inject CartService CartService

<h3>My Orders</h3>

@if (orders == null)
{
    <p>Loading...</p>
}
else if (orders.Count == 0)
{
    <p>You have no orders.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Status</th>
                <th>Created</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Status</td>
                    <td>@order.CreatedAt</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order>? orders;
    private UserProfile user;


    protected override async Task OnInitializedAsync()
    {
        //await AuthService.SetAuthHeaderAsync();
        //orders = await Http.GetFromJsonAsync<List<Order>>("api/orders");

        var allOrders = await OrderService.GetOrdersAsync();
        user = await CartService.GetCurrentUserProfileAsync();
        var userId = user.Id;
        orders = allOrders.Where(order => order.UserId == userId).ToList();
    }
}